<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="LogoutButton.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>